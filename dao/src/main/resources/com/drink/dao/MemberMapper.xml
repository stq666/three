<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drink.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="com.drink.model.Member">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="serialnumber" jdbcType="VARCHAR" property="serialnumber" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="telphone" jdbcType="VARCHAR" property="telphone" />
    <result column="cardno" jdbcType="VARCHAR" property="cardno" />
    <result column="createuser" jdbcType="BIGINT" property="createuser" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="alipay" jdbcType="VARCHAR" property="alipay" />
    <result column="rewardstatus" jdbcType="TINYINT" property="rewardstatus" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.drink.model.Member">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into member (id, loginname, name, 
      sex, serialnumber, idcard, 
      telphone, cardno, createuser, 
      createtime, wechat, qq, 
      status, alipay, rewardstatus
      )
    values (#{id,jdbcType=BIGINT}, #{loginname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{serialnumber,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{telphone,jdbcType=VARCHAR}, #{cardno,jdbcType=VARCHAR}, #{createuser,jdbcType=BIGINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{wechat,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{alipay,jdbcType=VARCHAR}, #{rewardstatus,jdbcType=TINYINT}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.drink.model.Member">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update member
    set loginname = #{loginname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      serialnumber = #{serialnumber,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      cardno = #{cardno,jdbcType=VARCHAR},
      createuser = #{createuser,jdbcType=BIGINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      wechat = #{wechat,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      alipay = #{alipay,jdbcType=VARCHAR},
      rewardstatus = #{rewardstatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, loginname, name, sex, serialnumber, idcard, telphone, cardno, createuser, 
    createtime, wechat, qq, status, alipay, rewardstatus
    from member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, loginname, name, sex, serialnumber, idcard, telphone, cardno, createuser, 
    createtime, wechat, qq, status, alipay, rewardstatus
    from member
  </select>
    <insert id="insertMember" parameterType="com.drink.model.Member">
        insert into member (loginname, name,
        sex, serialnumber, idcard,
        telphone, cardno, createuser,
        createtime, wechat, qq,
        status, alipay, rewardstatus
        )
        values (#{loginname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{sex,jdbcType=TINYINT}, #{serialnumber,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR},
        #{telphone,jdbcType=VARCHAR}, #{cardno,jdbcType=VARCHAR}, #{createuser,jdbcType=BIGINT},
        #{createtime,jdbcType=TIMESTAMP}, #{wechat,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT}, #{alipay,jdbcType=VARCHAR}, #{rewardstatus,jdbcType=TINYINT}
        )
    </insert>
  <select id="selectById" resultType="com.drink.module.member.MemberVo">
    select id, loginname, name, sex, serialnumber, idcard, telphone, cardno,
    createuser, createtime, wechat, qq, status,alipay
    from member where id=#{id}
  </select>
    <select id="selectId" resultType="long">
        SELECT LAST_INSERT_ID()
    </select>
    <select id="findDataByCondition" parameterType="com.drink.module.member.MemberVo" resultType="com.drink.module.member.MemberVo">
        select m.id, m.loginname, m.name, m.sex, m.serialnumber, m.idcard, m.telphone, m.cardno,
        m.createuser, m.createtime, m.wechat, m.qq, m.status,m.alipay,pm.name as pName,pm.serialnumber as pserialnumber
        from  member m
        LEFT JOIN  public_row p ON m.serialnumber=p.serialnumber
        left join member pm on (pm.serialnumber=p.pserialnumber)
        where m.status=0
        <if test="name != null and name!=''">
            and m.name like "%"#{name}"%"
        </if>
        <if test="ifmanager==0">
            and p.pserialnumber=#{serialnumber}
        </if>
        order by p.serialnumber asc  limit #{start} , #{limit}
    </select>
    <select id="findCountByCondition" parameterType="com.drink.module.member.MemberVo" resultType="java.lang.Integer">
        SELECT count(p.id) FROM member m
        LEFT JOIN  public_row p ON m.serialnumber=p.serialnumber
        where m.status=0
        <if test="name != null and name!=''">
            and m.name like "%"#{name}"%"
        </if>
        <if test="ifmanager==0">
            and p.pserialnumber=#{serialnumber}
        </if>
    </select>
    <select id="selectMaxSerialNumber" resultType="java.lang.String">
        select max(serialnumber) from member
    </select>
    <select id="selectLoginMember" resultType="com.drink.module.member.MemberVo">
         select m.id, m.loginname, m.name, m.sex, m.serialnumber, m.idcard, m.telphone, m.cardno,
        m.createuser, m.createtime, m.wechat, m.qq, m.status,m.alipay,pm.name as pName
        from member m
        left join member_level ml on (m.serialnumber=ml.serialnumber)
        left join member pm on (pm.serialnumber=ml.pserialnumber)
        where m.id=#{id}
    </select>
    <update id="updateByMember" parameterType="com.drink.module.member.MemberVo">
      update member set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      serialnumber = #{serialnumber,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      cardno = #{cardno,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      alipay = #{alipay,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>