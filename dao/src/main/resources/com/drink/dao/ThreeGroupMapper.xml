<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drink.dao.ThreeGroupMapper">
  <resultMap id="BaseResultMap" type="com.drink.model.ThreeGroup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="group_sort" jdbcType="INTEGER" property="groupSort" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from three_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.drink.model.ThreeGroup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into three_group (id, group_name, pid, 
      group_sort, create_time)
    values (#{id,jdbcType=BIGINT}, #{groupName,jdbcType=VARCHAR}, #{pid,jdbcType=BIGINT}, 
      #{groupSort,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.drink.model.ThreeGroup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update three_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=BIGINT},
      group_sort = #{groupSort,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, group_name, pid, group_sort, create_time
    from three_group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, group_name, pid, group_sort, create_time
    from three_group
  </select>
  <select id="getMaxSort" resultType="java.lang.Integer">
    SELECT MAX(group_sort) from three_group
  </select>
  <select id="selectId" resultType="java.lang.Long">
     SELECT LAST_INSERT_ID()
  </select>
  <update id="updatePidById">
    update three_group
    set  pid = #{pid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getPidByGroupId" resultType="java.lang.Long">
    select  pid from three_group where id=#{id}
  </select>
  <select id="findCountByCondition" parameterType="com.drink.module.ThreeGroupVo" resultType="java.lang.Integer">
    SELECT count(g.id) from three_group g
    <where>
      <if test="groupName!=null and groupName!=''">
        g.group_name=#{groupName}
      </if>
    </where>
  </select>
  <select id="findDataByCondition" parameterType="com.drink.module.ThreeGroupVo" resultType="com.drink.module.ThreeGroupVo">
    SELECT g.id,g.group_name as groupName,g.pid,g.group_sort as groupSort,g.create_time as createTime from three_group g
    <where>
      <if test="groupName!=null and groupName!=''">
        g.group_name=#{groupName}
      </if>
    </where>
    order by g.group_sort asc  limit #{start} , #{limit}
  </select>
</mapper>